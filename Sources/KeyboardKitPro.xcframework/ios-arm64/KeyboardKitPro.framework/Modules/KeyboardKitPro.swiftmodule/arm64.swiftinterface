// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios14.4 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name KeyboardKitPro
import KeyboardKit
@_exported import KeyboardKitPro
import Swift
import SwiftUI
import UIKit
extension KeyboardInputViewController {
  public func setupPro<Content>(with view: Content, licenseKey: Swift.String) where Content : SwiftUI.View
}
@available(iOS 14.0, *)
public struct EmojiCategoryKeyboardMenu : SwiftUI.View {
  public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s14KeyboardKitPro013EmojiCategoryA4MenuV4bodyQrvp", 0) ðŸ¦¸
}
@available(iOS 14.0, *)
public struct EmojiCategoryKeyboard : SwiftUI.View {
  public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s14KeyboardKitPro013EmojiCategoryA0V4bodyQrvp", 0) ðŸ¦¸
}
open class StandardAutocompleteSuggestionProvider : KeyboardKit.AutocompleteSuggestionProvider {
  public init(mode: KeyboardKitPro.StandardAutocompleteSuggestionProvider.Mode = .autocomplete, locale: Foundation.Locale = .current, checker: UIKit.UITextChecker = UITextChecker())
  public enum Mode {
    case autocomplete, autocorrect
    public static func == (a: KeyboardKitPro.StandardAutocompleteSuggestionProvider.Mode, b: KeyboardKitPro.StandardAutocompleteSuggestionProvider.Mode) -> Swift.Bool
    public var hashValue: Swift.Int {
      get
    }
    public func hash(into hasher: inout Swift.Hasher)
  }
  public var locale: Foundation.Locale
  public var mode: KeyboardKitPro.StandardAutocompleteSuggestionProvider.Mode
  public func autocompleteSuggestions(for text: Swift.String, completion: (KeyboardKit.AutocompleteResult) -> Swift.Void)
  @objc deinit
}
extension KeyboardKitPro.StandardAutocompleteSuggestionProvider.Mode : Swift.Equatable {}
extension KeyboardKitPro.StandardAutocompleteSuggestionProvider.Mode : Swift.Hashable {}
